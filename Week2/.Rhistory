library(readr)
install.packages(readr)
install.packages('readr')
install.packages('dplyr')
install.packages('ggplot2')
library(readr)
comics <- read_csv('https://assets.datacamp.com/production/course_1796/datasets/comics.csv')
comics[1,]
levels(comics$align)
table(comics$align, comics$gender)
library(dplyr)
#Remove align level
comics <- comics %>%
filter(align != 'Reformed Criminals') %>%
droplevels()
table(comics$align, comics$gender)
library(ggplot2)
ggplot(comics, aes(x = gender, fill = align)) +
geom_bar(position = "dodge") + #Decide whether to stack the graph or not.
theme(axis.text.x = element_text(angle = 0 ))#Decide the element text of x axis displaying angle.
tab <- table(comics$align, comics$gender)
options(scipen = 999, digits = 3) # Print fewer digits
prop.table(tab)     #Joint proportions
prop.table(tab, 2)  #'2' means Conditional on columns, '1' means Condintional on rows.
setwd("D:/GitHub/NTU-CS-X/Week2")
#Change the order of the levels in align
comics$align <- factor(comics$align,
levels = c('Bad', 'Neutral', 'Good'))
#Create plot of align
ggplot(comics, aes(x = align)) +
geom_bar()
#Plot of alignment broken down by gender
ggplot(comics, aes(x = align)) +
geom_bar() +
facet_wrap(~ gender)
pies
#Change the order of the levels in align
comics$align <- factor(comics$align,
levels = c('Bad', 'Neutral', 'Good'))
#Create plot of align
ggplot(comics, aes(x = align)) +
geom_bar()
#Plot of alignment broken down by gender
ggplot(comics, aes(x = align)) +
geom_bar() +
facet_wrap(~ gender)
#
lev <- c("apple", "key lime", "boston creme", "blueberry", "cherry", "pumpkin", "strawberry")
pies$flavor <- factor(pies$flavor, levels = lev)
library(readr)
cars <- read_csv('https://assets.datacamp.com/production/course_1796/datasets/cars04.csv')
cars[1,]
#Filter cars with 4, 6, 8 cylinders
common_cyl <- filter(cars, ncyl %in% c(4, 6, 8))
#Create box plots of city mpg by ncyl
ggplot(common_cyl, aes(x = as.factor(ncyl), y = city_mpg)) +
geom_boxplot()
#Create overlaid density plots for same data
ggplot(common_cyl, aes(x = city_mpg, fill = as.factor(ncyl))) +
geom_density(alpha = .3)
#Create hist of horsepwr with binwidth of 3
cars %>%
ggplot(aes(x = horsepwr)) +
geom_histogram(binwidth = 3) +
ggtitle('Horsepower binwidth = 3')
#Change binwidth to 30
cars %>%
ggplot(aes(x = horsepwr)) +
geom_histogram(binwidth = 30) +
ggtitle('Horsepower binwidth = 30')
#Change binwidth to 60
cars %>%
ggplot(aes(x = horsepwr)) +
geom_histogram(binwidth = 60) +
ggtitle('Horsepower binwidth = 60')
#Filter cars with 4, 6, 8 cylinders
common_cyl <- filter(cars, ncyl %in% c(4, 6, 8))
#Create box plots of city mpg by ncyl
ggplot(common_cyl, aes(x = as.factor(ncyl), y = city_mpg)) +
geom_boxplot()
#Create overlaid density plots for same data
ggplot(common_cyl, aes(x = city_mpg, fill = as.factor(ncyl))) +
geom_density(alpha = .3)
gapminder
library(ggplot2)
gapminder
library(ggplot2)
gapminder
install.packages('gapminder')
library(gapminder)
gapminder
library(gapminder)
#Compute groupwise mean and median lifeExp
gap2007 <- filter(gapminder, year == 2007)
gap2007 %>%
group_by(continent) %>%
summarize(mean(lifeExp),
median(lifeExp))
#Generate box plots of lifeExp for each continent
gap2007 %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot()
library(readr)
comics <- read_csv('https://assets.datacamp.com/production/course_1796/datasets/comics.csv')
#Exclude outliers from data
cars_no_out <- cars %>%
filter(msrp < 100000)
#Construct box plot of msrp using the reduced dataset
cars_no_out %>%
ggplot(aes(x = 1, y = msrp)) +
geom_boxplot()
#Create plot of city_mpg
cars %>%
ggplot(aes(x = 1, y = city_mpg)) +
geom_boxplot()
#Create plot of width
cars %>%
ggplot(aes(x = width)) +
geom_density()
#Compute groupwise measures of spread
gap2007 %>%
group_by(continent) %>%
summarize(sd(lifeExp),
IQR(lifeExp),
n())
#Generate overlaid density plots
gap2007 %>%
ggplot(aes(x = lifeExp, fill = continent)) +
geom_density(alpha = 0.3)
#Create density plot of population
gap2007 %>%
ggplot(aes(x = pop)) +
geom_density()
#Create density plot of log(pop)
gap2007 %>%
ggplot(aes(x = log(pop)) +
geom_density()
#Create density plot of population
gap2007 %>%
ggplot(aes(x = pop)) +
geom_density()
#Create density plot of log(pop)
gap2007 %>%
ggplot(aes(x = log(pop))) +
geom_density()
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
ylim(c(35,95)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
ylim(c(35,90)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
ylim(c(35,85)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
ylim(c(35,80)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
ylim(c(50,80)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
ylim(c(45,80)) +
geom_boxplot()
#Outliers
gap_asia <- gap2007 %>%
filter(continent == 'Asia') %>%
mutate(is_outlier = lifeExp < 50)
#Create box plot of lifeExp with outliers
gap_asia %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
#Create box plot of lifeExp without outliers
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
install.packages('openintro')
library(openintro)
email(head, 3)
library(openintro)
head(email, 3)
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char)) +
geom_boxplot()
library(openintro)
head(email, 3)
#Compute summary statistics
email <- email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char)) +
geom_boxplot()
library(openintro)
head(email, 3)
#Compute summary statistics
email <- email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
group_by(spam) %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char)) +
geom_boxplot()
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
group_by(spam) %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char, group_by(spam))) +
geom_boxplot()
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
group_by(spam) %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char, group = spam)) +
geom_boxplot()
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char, group = spam)) +
geom_boxplot()
#Compute center and spread for exclaim_mess by spam
email %>%
group_by(spam) %>%
summarize(median(exclaim_mess), IQR(exclaim_mess))
#Create plot for spam and exclaim_mess
email %>%
mutate(log_exclaim_mess = log(exclaim_mess)) %>%
ggplot(aes(x = log_exclaim_mess)) +
geom_histogram() +
facet_wrap(~ spam)
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char, group = spam)) +
geom_boxplot()
#Compute center and spread for exclaim_mess by spam
email %>%
group_by(spam) %>%
summarize(median(exclaim_mess), IQR(exclaim_mess))
#Create plot for spam and exclaim_mess
email %>%
mutate(log_exclaim_mess = log(exclaim_mess)) %>%
ggplot(aes(x = log_exclaim_mess)) +
geom_histogram() +
facet_wrap(~ spam)
#Create plot of proportion of spam by image
email %>%
mutate(has_image = image > 0) %>%
ggplot(aes(x = has_image, fill = spam)) +
geom_bar(position = 'fill')
library(openintro)
head(email, 3)
#Compute summary statistics
email %>%
group_by(spam) %>%
summarize(median(num_char), IQR(num_char))
#Create plot
email %>%
mutate(log_num_char = log(num_char)) %>%
ggplot(aes(x = spam, y = log_num_char, group = spam)) +
geom_boxplot()
#Compute center and spread for exclaim_mess by spam
email %>%
group_by(spam) %>%
summarize(median(exclaim_mess), IQR(exclaim_mess))
#Create plot for spam and exclaim_mess
email %>%
mutate(log_exclaim_mess = log(exclaim_mess)) %>%
ggplot(aes(x = log_exclaim_mess)) +
geom_histogram() +
facet_wrap(~ spam)
#Create plot of proportion of spam by image
email %>%
mutate(has_image = image > 0) %>%
ggplot(aes(x = has_image, fill = spam, group = spam)) +
geom_bar(position = 'fill')
# Reorder levels
email$number = factor(email$number, order = T, levels = c('none','small','big'))
# Construct plot of number
ggplot(email, aes(x = number)) +
geom_bar() +
facet_wrap(~spam)
email %>%
filter(dollar > 10) %>%
ggplot(aes(x = spam)) +
geom_bar()
