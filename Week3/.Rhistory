ggplot(barley, aes(x = year, y = yield, col = variety, group = variety)) +
geom_line() +
facet_wrap(~site, nrow = 1) +
scale_x_discrete('Year') +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Variety')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_color_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year') +
scale_y_continuous('Yield (bushels/acre)')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') #+
#scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_group_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_group('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_fill_manual('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_fill('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorba', width = 0.2, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.2, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point')
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = position_jitter(width = 0.02)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = 'dodge') +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = position_dodge(width = 0.02)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.3, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.2, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.2, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a errorbar that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon') +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a errorbar that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a errorbar that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', alpha = 0.1, col = NA) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
party
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
View(party)
class(party)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.table(party)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.frame.table(party)
class(party)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.frame.table(party)
chisq.test(party)$residuals
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.table(party)
install.packages('data.table')
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.table(party)
chisq.test(party)$residuals
class(party)
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.table(party)
party <- as.table(party)
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- table(party)
chisq.test(party)$residuals
class(party)
View(party)
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
chisq.test(party)$residuals
df <- data.frame(
V1 = letters[1:4],
V2 = rep(LETTERS[1:3], each = 4),
V3 = 1:12
)
xtabs(V3 ~ V1 + V2, df)
df <- data.frame(
V1 = letters[1:4],
V2 = rep(LETTERS[1:3], each = 4),
V3 = 1:12
)
View(df)
party <- matrix(c('F', 762, 327, 468, 'M', 484, 239, 477), ncol = 4, byrow = T)
colnames(party) <- c('gender', 'Democrat', 'Independent', 'Republican')
party <- as.table(party)
chisq.test(party)$residuals
View(party)
party <- matrix(c('F', 762, 327, 468, 'M', 484, 239, 477), ncol = 4, byrow = T)
colnames(party) <- c('gender', 'Democrat', 'Independent', 'Republican')
View(party)
party <- matrix(c(762, 327, 468, 484, 239, 477), ncol = 3, byrow = T)
colnames(party) <- c('gender', 'Democrat', 'Independent', 'Republican')
rownames(party) <- c('F', 'M')
View(party)
party <- matrix(c(762, 327, 468, 484, 239, 477), ncol = 3, byrow = T)
colnames(party) <- c('Democrat', 'Independent', 'Republican')
rownames(party) <- c('F', 'M')
View(party)
party <- matrix(c(762, 327, 468, 484, 239, 477), ncol = 3, byrow = T)
colnames(party) <- c('Democrat', 'Independent', 'Republican')
rownames(party) <- c('F', 'M')
party <- as.table(party)
chisq.test(party)$residuals
chisq.test(party)$residuals
# Expected
chisq.test(party)$expected
install.packages('vcd')
library(vcd)
mosiac(party, shade = T, color = T)
library(vcd)
mosaic(party, shade = T, color = T)
setwd("D:/GitHub/NTU-CS-X/Week3")
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(tm)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
library(factoextra)
library(Matrix)
docs.corpus <- Corpus(DirSource("./Conan"))
docs.seg <- tm_map(docs.corpus, segmentCN)
docs.tdm <- TermDocumentMatrix(docs.seg)
docs.tf <- apply(as.matrix(docs.tdm), 2, function(word) { word/sum(word) })
idf <- function(doc) {
return ( log2( length(doc)+1 / nnzero(doc)) )
}
docs.idf <- apply(as.matrix(docs.tdm), 1, idf)
docs.tfidf <- docs.tf * docs.idf
docs.tfidf<- t(docs.tfidf)
docs.pca <- prcomp(docs.tfidf, scale = T)
fviz_eig(docs.pca)
fviz_pca_ind(docs.pca, geom.ind = c("point"), col.ind = "cos2")
fviz_pca_var(docs.pca, col.var = "contrib",repel = TRUE)
docs.eig <- get_eig(docs.pca)
docs.var <- get_pca_var(docs.pca)
docs.ind <- get_pca_ind(docs.pca)
fviz_pca_biplot(docs.pca, geom.ind = "point")
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 1:3, pch = 8, cex = 2)
library(wordcloud2)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud2(docs.df, minSize=10, gridSize=5, fontFamily = "微軟正黑體",
backgroundColor='white', color='random-light')
docs.tfidf<- t(docs.tfidf)
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud2(docs.df, minSize=10, gridSize=5, fontFamily = "微軟正黑體",
backgroundColor='white', color='random-light')
docs.tfidf_t<- t(docs.tfidf)
docs.pca <- prcomp(docs.tfidf_t, scale = T)
fviz_pca_biplot(docs.pca, geom.ind = "point")
txt10 <- read.table('./Conan/10.txt')
txt10 <- get('./Conan/10.txt')
setwd("D:/GitHub/NTU-CS-X/Week3")
txt10 <- get('./Conan/10.txt')
txt10 <- Corpus(DirSource('./Conan/10.txt'))
txt10 <- Corpus(VectorSource('./Conan/10.txt'))
View(txt10)
txt10 <- Corpus(TxtSource('./Conan/10.txt'))
file.show('./Conan/10.txt')
install.packages('readtext')
readtext('./Conan/10.txt')
library(readtext)
readtext('./Conan/10.txt')
library(readtext)
readtext('./Conan/10.txt')
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud2(docs.df, minSize=10, gridSize=5, fontFamily = "微軟正黑體",
backgroundColor='white', color='random-light')
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud2(docs.df, minSize=10, gridSize=5, fontFamily = "微軟正黑體",
backgroundColor='white', color='random-light')
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
docs.eig <- get_eig(docs.pca)
docs.var <- get_pca_var(docs.pca)
docs.ind <- get_pca_ind(docs.pca)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
km <- kmeans(ind.coord2, 3)
plot(ind.coord2, col = km$cluster)
points(km$centers, col = 1:3, pch = 8, cex = 2)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:9) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:8) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:5) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
ind.coord2 <- docs.ind$coord[, 1:5]
wss <- c()
for (i in 1:5) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
ind.coord2 <- docs.ind$coord[1:10,]
ind.coord2 <- docs.ind$coord[, 1:10]
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:5) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:10) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:3) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
ind.coord2 <- docs.ind$coord[, 1:2]
docs.eig <- get_eig(docs.pca)
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(tm)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
library(factoextra)
library(Matrix)
library(wordcloud2)
library(readtext)
readtext('./Conan/10.txt')
# 詞頻矩陣
docs.corpus <- Corpus(DirSource("./Conan"))
docs.seg <- tm_map(docs.corpus, segmentCN)
docs.tdm <- TermDocumentMatrix(docs.seg)
# TF-IDF
docs.tf <- apply(as.matrix(docs.tdm), 2, function(word) { word/sum(word) })
idf <- function(doc) {
return ( log2( length(doc)+1 / nnzero(doc)) )
}
docs.idf <- apply(as.matrix(docs.tdm), 1, idf)
docs.tfidf <- docs.tf * docs.idf
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud2(docs.df, minSize=10, gridSize=5, fontFamily = "微軟正黑體",
backgroundColor='white', color='random-light')
docs.tfidf_t<- t(docs.tfidf)
docs.pca <- prcomp(docs.tfidf_t, scale = T)
docs.eig <- get_eig(docs.pca)
docs.var <- get_pca_var(docs.pca)
docs.ind <- get_pca_ind(docs.pca)
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:4) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:5) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
ind.coord2 <- docs.ind$coord[, 1:2]
wss <- c()
for (i in 1:4) { wss[i] <- kmeans(ind.coord2, i)$tot.withinss }
plot(wss, type = "b")
