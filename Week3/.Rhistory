stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_fill_discrete('Site') +
scale_x_discrete('Year') +
scale_x(expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_fill_discrete('Site') +
scale_x_discrete('Year') +
#scale_x(expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_fill_discrete('Site') +
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1)
#scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = variety, group = variety)) +
geom_line() +
facet_wrap(~site, nrow = 1) +
scale_x_discrete('Year') +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Variety')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_color_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year') +
scale_y_continuous('Yield (bushels/acre)')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') #+
#scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_group_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_group('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_fill_manual('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_fill('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', col = NA, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorba', width = 0.2, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.2, alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point')
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = position_jitter(width = 0.02)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = 'dodge') +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = position_dodge(width = 0.02)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.02, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.3, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.y = mean, geom = 'point') +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.2, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.2, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a ribbon that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a errorbar that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon') +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a errorbar that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', alpha = 0.1) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line', position = position_dodge(width = 0.2)) +
stat_summary(fun.y = mean, geom = 'point',position = position_dodge(width = 0.2)) +
# fun.args = list(mult = 1) to have a errorbar that spans over one standard deviation in both directions.
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'errorbar', width = 0.1, position = position_dodge(width = 0.2)) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
ggplot(barley, aes(x = year, y = yield, col = site, fill = site, group = site)) +
stat_summary(fun.y = mean, geom = 'line') +
stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = 'ribbon', alpha = 0.1, col = NA) +
scale_x_discrete('Year', expand = c(0.05, 0.05)) +
scale_y_continuous('Yield (bushels/acre)') +
scale_color_discrete('Site') +
scale_fill_discrete('Site') +
ggtitle('With Errorbar')
party
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
View(party)
class(party)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.table(party)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.frame.table(party)
class(party)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.frame.table(party)
chisq.test(party)$residuals
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.table(party)
install.packages('data.table')
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.table(party)
chisq.test(party)$residuals
class(party)
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- as.data.table(party)
party <- as.table(party)
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
party <- table(party)
chisq.test(party)$residuals
class(party)
View(party)
library(data.table)
party <- data.frame('gender' = c('F', 'M'), 'Democrat' = c(762, 484), 'Independent' = c(327, 239), 'Republician' = c(468, 477))
chisq.test(party)$residuals
df <- data.frame(
V1 = letters[1:4],
V2 = rep(LETTERS[1:3], each = 4),
V3 = 1:12
)
xtabs(V3 ~ V1 + V2, df)
df <- data.frame(
V1 = letters[1:4],
V2 = rep(LETTERS[1:3], each = 4),
V3 = 1:12
)
View(df)
party <- matrix(c('F', 762, 327, 468, 'M', 484, 239, 477), ncol = 4, byrow = T)
colnames(party) <- c('gender', 'Democrat', 'Independent', 'Republican')
party <- as.table(party)
chisq.test(party)$residuals
View(party)
party <- matrix(c('F', 762, 327, 468, 'M', 484, 239, 477), ncol = 4, byrow = T)
colnames(party) <- c('gender', 'Democrat', 'Independent', 'Republican')
View(party)
party <- matrix(c(762, 327, 468, 484, 239, 477), ncol = 3, byrow = T)
colnames(party) <- c('gender', 'Democrat', 'Independent', 'Republican')
rownames(party) <- c('F', 'M')
View(party)
party <- matrix(c(762, 327, 468, 484, 239, 477), ncol = 3, byrow = T)
colnames(party) <- c('Democrat', 'Independent', 'Republican')
rownames(party) <- c('F', 'M')
View(party)
party <- matrix(c(762, 327, 468, 484, 239, 477), ncol = 3, byrow = T)
colnames(party) <- c('Democrat', 'Independent', 'Republican')
rownames(party) <- c('F', 'M')
party <- as.table(party)
chisq.test(party)$residuals
chisq.test(party)$residuals
# Expected
chisq.test(party)$expected
install.packages('vcd')
library(vcd)
mosiac(party, shade = T, color = T)
library(vcd)
mosaic(party, shade = T, color = T)
setwd("D:/GitHub/NTU-CS-X/Week3")
# Height of children vs. height of father
ggplot(data = Galton_men, aes(x = father, y = height)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
library(ggplot2)
# Calculate summary statistics
bdims_summary <- summarize(bdims, N = n(), r = cor(hgt, wgt),
mean_hgt = mean(hgt), sd_hgt = sd(hgt),
mean_wgt = mean(wgt), sd_wgt = sd(wgt))
# Height of children vs. height of father
ggplot(data = Galton_men, aes(x = father, y = height)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
library(openintro)
# Height of children vs. height of father
ggplot(data = Galton_men, aes(x = father, y = height)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
install.packages('HistData')
library(HistData)
# Height of children vs. height of father
ggplot(data = Galton_men, aes(x = father, y = height)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
Galton
GaltonFamilies
library(HistData)
# Height of children vs. parent
ggplot(data = Galton_men, aes(x = parent, y = child)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
library(HistData)
# Height of children vs. parent
ggplot(data = Galton, aes(x = parent, y = child)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
library(HistData)
# Height of children vs. parent
ggplot(data = Galton, aes(x = parent, y = child)) +
geom_jitter() +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
library(HistData)
# Height of children vs. parent
ggplot(data = Galton, aes(x = parent, y = child)) +
geom_jitter(alpha = 0.3) +
geom_abline(slope = 1, intercept = 0) +
geom_smooth(method = 'lm', se = FALSE)
# Linear model for weight as a function of height
lm(wgt ~ hgt, data = bdims)
# Linear model for weight as a function of height
lm(wgt ~ hgt, data = bdims)
library(broom)
install.packages('broom')
ben <- data.frame('wgt' = 74.8, 'hgt' = 182.8)
View(ben)
# Linear model for weight as a function of height
mod <- lm(wgt ~ hgt, data = bdims)
mod
ben <- data.frame('wgt' = 74.8, 'hgt' = 182.8)
predict(mod, newdata = ben)
ben <- data.frame('wgt' = 74.8, 'hgt' = 182.8)
predict(mod, newdata = ben)
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = `(Intercept)`, slope = `hgt`),
color = "dodgerblue")
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coef(mod),
aes(intercept = `(Intercept)`, slope = `hgt`),
color = "dodgerblue")
coefs = coef(mod)
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = `(Intercept)`, slope = `hgt`),
color = "dodgerblue")
coefs = as.data.frame(coef(mod))
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = `(Intercept)`, slope = `hgt`),
color = "dodgerblue")
View(coefs)
coefs = as.data.frame(coef(mod))
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = (Intercept), slope = `hgt`),
color = "dodgerblue")
coefs = as.data.frame(coef(mod))
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = (Intercept), slope = hgt),
color = "dodgerblue")
coefs <- data.frame(coef(mod))
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = Intercept, slope = hgt),
color = "dodgerblue")
View(coefs)
coefs <- data.frame(coef(mod))
class(coefs)
View(coefs)
coefs <- data.frame(coef(mod), byrow = T)
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = Intercept, slope = hgt),
color = "dodgerblue")
View(coefs)
coefs <- matrix(coef(mod), byrow = T)
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = Intercept, slope = hgt),
color = "dodgerblue")
View(coefs)
coefs <- matrix(coef(mod), bycol = T)
# Show the coefficients
coef(mod)
# Show the full output
summary(mod)
# Mean of weights equal to mean of fitted values?
mean(bdims$wgt) == mean(fitted.values(mod))
coefs <- data.frame('(Intercept)' = coef(mod)[1], 'hgt' = coef(mod)[2])
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(data = coefs,
aes(intercept = Intercept, slope = hgt),
color = "dodgerblue")
View(coefs)
coef(mod)[1]
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_abline(intercept = coef(mod)[1], slope = coef(mod)[2],  color = "dodgerblue")
