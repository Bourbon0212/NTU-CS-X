shiny::runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('markdown')
install.packages('DT')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='bourbon0212', token='586E35D3277883B557178099806ACF89', secret='W4qsxNZjLOpRXtoaPrtrlVHbBq7Bvi750GJy8U34')
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
devtools::install_github("thomasp85/tweenr")
devtools::install_github("thomasp85/gganimate")
library(httr)
set_config(config(ssl_verifypeer = 0L))
devtools::install_github("thomasp85/tweenr")
devtools::install_github("thomasp85/gganimate")
library(devtools)
assignInNamespace("version_info", c(devtools:::version_info, list("3.5" = list(version_min = "3.3.0", version_max = "99.99.99", path = "bin"))), "devtools")
find_rtools() # is TRUE now
library(httr)
set_config(config(ssl_verifypeer = 0L))
devtools::install_github("thomasp85/tweenr")
devtools::install_github("thomasp85/gganimate")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
library(ggmap)
library(ggplot2)
library(gganimate)
library(viridis)
library(RColorBrewer)
library(raster)
library(tidyr)
library(tweenr)
library(magick)
library(stringr)
library(lubridate)
res <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res.csv')
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi.csv')
# Map
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner-lite")
# Map + Data
res.stat.map <- ggmap(map, darken = c(0.5, "white")) %+% res + aes(x = lng, y = lat, z = X307) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(x = "Longitude", y = "Latitude") +
coord_map() +
ggtitle('Remaining Amount of Youbike in Taipei')
print(res.stat.map)
# res3
res3 <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res3.csv')
res3_g <- gather(res3, time, per, X7:X24)
res3_g$time <- str_replace(res3_g$time, 'X', '')
# Animation
res.stat.map.ani <- ggmap(map, darken = c(0.5, "white")) %+% res3_g + aes(x = lng, y = lat, z = per) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(title = 'Day : Wednesday Time : {closest_state}', x = "Longitude", y = "Latitude") +
coord_map() +
transition_states(time, transition_length = 1, state_length = 1)
print(res.stat.map.ani)
library(ggmap)
library(ggplot2)
library(gganimate)
library(viridis)
library(RColorBrewer)
library(raster)
library(tidyr)
library(tweenr)
library(magick)
library(stringr)
library(lubridate)
res <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res.csv')
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi.csv')
# Map
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner-lite")
# Map + Data
res.stat.map <- ggmap(map, darken = c(0.5, "white")) %+% res + aes(x = lng, y = lat, z = X307) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(x = "Longitude", y = "Latitude") +
coord_map() +
ggtitle('Remaining Amount of Youbike in Taipei')
print(res.stat.map)
# res3
res3 <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res3.csv')
res3_g <- gather(res3, time, per, X7:X24)
res3_g$time <- str_replace(res3_g$time, 'X', '')
# Animation
res.stat.map.ani <- ggmap(map, darken = c(0.5, "white")) %+% res3_g + aes(x = lng, y = lat, z = per) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(title = 'Day : Wednesday Time : {closest_state}', x = "Longitude", y = "Latitude") +
coord_map() +
transition_states(time, transition_length = 1, state_length = 1)
print(res.stat.map.ani)
res.stat.map.ani <- ggmap(map, darken = c(0.5, "white")) %+% res3_g + aes(x = lng, y = lat, z = per) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(title = 'Wednesday, {closest_state}', x = "Longitude", y = "Latitude") +
coord_map() +
transition_states(time, transition_length = 1, state_length = 1)
print(res.stat.map.ani)
shiny::runApp()
runApp()
library(shiny)
library(shinythemes)
library(ggmap)
library(ggplot2)
library(RColorBrewer)
library(stringr)
library(tidyr)
library(dbplyr)
library(readr)
library(lubridate)
library(DT)
library(tools)
shiny::runApp()
runApp()
res3 <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res5.csv')
View(res3)
View(res3)
res1 <- read.csv('data/Youbike_res3.csv')
colnames(res1)[6:23] <- c(7:24)
View(res1)
runApp()
runApp()
runApp()
res1_g <- gather(res1, time, per, 7:24)
res1_g <- gather(res1, time, per, '7':'24')
View(res1_g)
runApp()
runApp()
runApp()
res <- read.csv('data/Youbike_res.csv')
View(res)
res_g <- gather(res, time, per, 6:ncol(res))
View(res_g)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner-lite")
res <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res.csv')
library(ggmap)
library(ggplot2)
library(gganimate)
library(viridis)
library(RColorBrewer)
library(raster)
library(tidyr)
library(tweenr)
library(magick)
library(stringr)
library(lubridate)
res <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_res.csv')
map <- get_map(location = c(min(res$lng), min(res$lat), max(res$lng), max(res$lat)), maptype = "toner-lite")
res.stat.map.ani <- ggmap(map, darken = c(0.5, "white")) %+% res3_g + aes(x = lng, y = lat, z = per) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(title = 'Friday, {closest_state}', x = "Longitude", y = "Latitude") +
coord_map() +
transition_states(time, transition_length = 1, state_length = 1)
print(res.stat.map.ani)
res.stat.map <- ggmap(map, darken = c(0.5, "white")) %+% res + aes(x = lng, y = lat, z = X307) +
stat_summary_2d(fun = median, alpha = 0.6) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"), space = 'Lab') +
labs(x = "Longitude", y = "Latitude") +
coord_map() +
ggtitle('Remaining Amount of Youbike in Taipei')
print(res.stat.map)
shiny::runApp()
install.packages('shinythemes')
shiny::runApp()
install.packages('shinythemes')
shiny::runApp()
install.packages('tidyverse')
runApp()
install.packages('DT')
runApp()
library(vcd)
# Bike
sbi <- read.csv('D:/GitHub/NTU-CS-X/Final Project/Youbike/data/Youbike_sbi.csv')
sbi_g <- gather(sbi, time, quan, 6:ncol(sbi))
# Table
sbi_tab <- with(sbi_g, tapply(quan, list(sarea, time), FUN=sum))
library(tidyverse)
sbi_g <- gather(sbi, time, quan, 6:ncol(sbi))
# Table
sbi_tab <- with(sbi_g, tapply(quan, list(sarea, time), FUN=sum))
# Chi Test
# Expected
chisq.test(sbi_tab)$expected
# Residuals
chisq.test(sbi_tab)$residuals
# mosaic
mosaic(sbi_tab, shade = T, color = T)
library(vcd)
install.packages('vcd')
# mosaic
mosaic(sbi_tab, shade = T, color = T)
library(vcd)
# mosaic
mosaic(sbi_tab, shade = T, color = T)
# mosaic
mosaic(sbi_tab, shade = T, color = T) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"))
library(vcd)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
# mosaic
mosaic(sbi_tab, shade = T, color = T) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"))
# mosaic
mosaicplot(sbi_tab, shade = T, color = T) +
scale_fill_gradientn(name = 'Median', colours = brewer.pal(11, "RdYlGn"))
# mosaic
mosai(sbi_tab, shade = T, color = T)
# mosaic
mosaic(sbi_tab, shade = T, color = T)
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(just_labels = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(label = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
?mosaic
+ theme(axis.text.x=element_text(angle=-25, hjust= .1))
# mosaic
mosaic(sbi_tab, shade = T, color = T) +#labeling = labeling_border(label = rot_labelsc(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
theme(axis.text.x=element_text(angle=-25, hjust= .1))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels =  = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 90, 90, 90, 90, 90, 90, 90, 90)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(0, 90, 0 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(0, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(900, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
ggplot(sbi_tab) +
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = brewer.pal(11, "RdYlGn"), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = brewer.pal(11, "RdYlGn"), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalette("RdYlGn"), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalette("RdYlGn")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalettec("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, col=colorRampPalette( c("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaicplot(sbi_tab, shade = T, col=colorRampPalette( c("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = colorRampPalettec("green3", "yellow", "red"), space="rgb")(9), labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# mosaic
mosaic(sbi_tab, shade = T, color = T, labeling = labeling_border(rot_labels = c(90, 90, 0, 0)))
# Chi Test
# Expected
chisq.test(sbi_tab)$expected
sbi_tab
# Residuals
chisq.test(sbi_tab)$residuals
